# -*-eselect-*-  vim: ft=eselect
# Distributed under the terms of the GNU GPL version 2 or later

DESCRIPTION="Manage the /usr/share/plymouth/bizcom.png symlink"
MAINTAINER="arfbtwn@openmailbox.org"

# sort function for kernel versions, to be used in a pipe
sort_kernel_versions() {
	local vsort="sort"
	LC_ALL=C ${vsort}
}

# find a list of kernel symlink targets
find_targets() {
	local f
	for f in "${EROOT}"/etc/plymouth/*.png; do
		basename "${f}" .png
	done | sort_kernel_versions
}

# remove the kernel symlink
remove_symlink() {
	rm "${EROOT}/usr/share/plymouth/bizcom.png"
}

# set the kernel symlink
set_symlink() {
	local target=$1

	if is_number "${target}"; then
		local targets=( $(find_targets) )
		target=${targets[target-1]}
	fi

	if [[ -z ${target} ]]; then
		die -q "Target \"$1\" doesn't appear to be valid!"
	else
		ln -s "/etc/plymouth/${target}.png" "${EROOT}/usr/share/plymouth/bizcom.png"
	fi
}

### show action ###

describe_show() {
	echo "Show the current symlink"
}

do_show() {
	write_list_start "Current symlink:"
	if [[ -L "${EROOT}/usr/share/plymouth/bizcom.png" ]]; then
		local kernel=$(canonicalise "${EROOT}/usr/share/plymouth/bizcom.png")
		write_kv_list_entry "${kernel%/}" ""
	else
		write_kv_list_entry "(unset)" ""
	fi
}

### list action ###

describe_list() {
	echo "List available symlink targets"
}

do_list() {
	local i targets=( $(find_targets) )

	write_list_start "Available symlink targets:"
	for (( i = 0; i < ${#targets[@]}; i++ )); do
		[[ ${targets[i]} = \
			$(basename "$(canonicalise "${EROOT}/usr/share/plymouth/bizcom.png")" .png) ]] \
			&& targets[i]=$(highlight_marker "${targets[i]}")
	done
	write_numbered_list -m "(none found)" "${targets[@]}"
}

### set action ###

describe_set() {
	echo "Set a new symlink target"
}

describe_set_parameters() {
	echo "<target>"
}

describe_set_options() {
	echo "target : Target name or number (from 'list' action)"
}

do_set() {
	[[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
	[[ $# -gt 1 ]] && die -q "Too many parameters"

	if [[ -L "${EROOT}/usr/share/plymouth/bizcom.png" ]]; then
		# existing symlink
		remove_symlink || die -q "Couldn't remove existing symlink"
		set_symlink "$1" || die -q "Couldn't set a new symlink"
	elif [[ -e "${EROOT}/usr/share/plymouth/bizcom.png" ]]; then
		# we have something strange
		die -q "${EROOT}/usr/share/plymouth/bizcom.png exists but is not a symlink"
	else
		set_symlink "$1" || die -q "Couldn't set a new symlink"
	fi
}
